<form
    action="https://buttondown.com/api/emails/embed-subscribe/harrislapiroff"
    method="post"
    target="popupwindow"
    onsubmit="window.open('https://buttondown.com/harrislapiroff', 'popupwindow')"
    webc:root="override"
>
    <form-control>
        <label for="bd-email">Email Address</label>
        <input type="email" name="email" id="bd-email" required />
        <button type="submit">
            <span>Subscribe</span>
        </button>
    </form-control>
</form>

<style webc:scoped="newsletter-form">
    :host {
        --height: calc(1.5 * var(--line-height-base));
        position: relative;
        margin-top: var(--line-height-base);
    }

    input, button {
        height: var(--height);
        line-height: var(--height);
        font: inherit;
        box-sizing: border-box;
        padding: 0 1ch;
    }

    /* Note that the form-control component is javascript-enhanced to
     * automatically add classes like empty, blurred, pristine, etc. to itself
     * depending on the state of the field. We use these to aid in styling.
    */
    form-control {
        display: flex;
        flex-direction: row;
        justify-content: stretch;
    }

    input {
        border: 0.1rem solid var(--color-base);
        background: transparent;
        border-radius: var(--border-radius-base) 0 0 var(--border-radius-base);
        flex-grow: 1;
        color: inherit;
    }

    input:focus, button:focus {
        outline: none;
    }

    label {
        position: absolute;
        left: 1ch;
        padding: 0 1ch;
        top: calc(-0.5 * var(--line-height-base) * 0.8);
        text-transform: uppercase;
        background: var(--color-background);
        color: var(--color-text-striking);
        transform: scale(0.8);
        transform-origin: left top;
        transition: all 150ms linear;
    }

    form-control.empty.blurred label {
        transform: scale(1);
        left: 1ch;
        top: calc(0.5 * var(--height) - 0.5 * var(--line-height-base));
        color: var(--color-text-muted);
    }

    button {
        background: var(--color-link);
        border-radius: 0 var(--border-radius-base) var(--border-radius-base) 0;
        border: 0;
        color: var(--color-background);
        text-align: center;
        padding: 0 1ch;
        cursor: pointer;
    }

    button::before {
        content: 'â†’';
    }

    button > span {
        position: absolute;
        width: 0;
        height: 0;
        overflow: hidden;
    }
</style>